/* Copyright (C) 2019 Lee C. Bussy (@LBussy)

This file is part of Lee Bussy's Brew Bubbles (Brew-Bubbles).

Brew Bubbles is free software: you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation, either version 3 of the License, or (at your
option) any later version.

Brew Bubbles is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU 
General Public License for more details.

You should have received a copy of the GNU General Public License along
with Brew Bubbles. If not, see <https://www.gnu.org/licenses/>. */

#ifndef CONFIG_H
#define CONFIG_H

//////////////////////////////////////////////////////////////////////////
//
// Set verbosity of debug messages 0-6
//
//      * 0 - LOG_LEVEL_SILENT     no output 
//      * 1 - LOG_LEVEL_FATAL      fatal errors 
//      * 2 - LOG_LEVEL_ERROR      all errors  
//      * 3 - LOG_LEVEL_WARNING    errors, and warnings 
//      * 4 - LOG_LEVEL_NOTICE     errors, warnings and notices 
//      * 5 - LOG_LEVEL_TRACE      errors, warnings, notices & traces 
//      * 6 - LOG_LEVEL_VERBOSE    all 
//
// Uncomment #define DISABLE_LOGGING to remove all logging
//
#ifndef LOG_LEVEL
#define LOG_LEVEL LOG_LEVEL_VERBOSE
// #define DISABLE_LOGGING
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Task scheduler defines, uncomment to enable
//
#ifndef TASKSCHEDULER
#define TASKSCHEDULER
// #define _TASK_MICRO_RES // micro() instead of millis() resolution
// #define _TASK_TIMECRITICAL // Time critical tracking option enabled
// #define _TASK_SLEEP_ON_IDLE_RUN // Use SLEEP_MODE_IDLE state in between
// #define _TASK_STATUS_REQUEST // Support for StatusRequest object
// #define _TASK_WDT_IDS // Support for Task IDs and Control Points
// #define _TASK_LTS_POINTER // Support for Local Task Storage pointer
// #define _TASK_PRIORITY // Support for layered task prioritization
// #define _TASK_STD_FUNCTION // Support for std::functions
// #define _TASK_DEBUG // All methods and variables declared as public
// #define _TASK_INLINE // All methods defined as inline
// #define _TASK_TIMEOUT // Support for overall Task timeout
#endif //TASKSCHEDULER

//////////////////////////////////////////////////////////////////////////
//
// Define data source (identifies JSON type to target)
//
#ifndef API_KEY
#define API_KEY "brewbubbles"
#endif
//
//////////////////////////////////////////////////////////////////////////
 
//////////////////////////////////////////////////////////////////////////
//
// Define build version (Git tag from PIO Env)
//
#ifndef VERSION_STRING
#define VERSION_STRING PIO_SRC_TAG
#endif
//
//////////////////////////////////////////////////////////////////////////
 
//////////////////////////////////////////////////////////////////////////
//
// Define build commit (Git commit from PIO Env)
//
#ifndef BUILD_NAME
#define BUILD_NAME PIO_SRC_REV
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Set serial baud rate
//
#ifndef BAUD
#define BAUD 74880
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Access Point name
//
#ifndef APNAME
#define APNAME "brewbubbles"
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Access point password
//
#ifndef AP_PASSWD
#define AP_PASSWD "br3wbubbl3s"
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Firmware URL
//
#ifndef FIRMWAREURL
#define FIRMWAREURL "http://www.brewbubbles.com/firmware/firmware.bin"
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// SPIFFS URL
//
#ifndef SPIFFSURL
#define SPIFFSURL "http://www.brewbubbles.com/firmware/spiffs.bin"
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Default host name
//
#ifndef HOSTNAME
#define HOSTNAME "brewbubbles"
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Default Bubble name
//
#ifndef BUBNAME
#define BUBNAME "Fermenter 1"
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Input pin for counter
//
#ifndef COUNTPIN
#define COUNTPIN D1
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Define whether to report temperatures
//
#ifndef READTEMP
#define READTEMP
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Define temperature format (true = Farenheit, false = Celcius)
//
#ifndef TEMPFORMAT
#define TEMPFORMAT true
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Define ambient temp sensor pin
//
#ifndef AMBSENSOR
#define AMBSENSOR D2 // Uncomment to use Ambient temp sensor
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Define vessel temp sensor pin
//
#ifndef VESSENSOR
#define VESSENSOR D3 // Uncomment to use vessel temp sensor
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Define reset wifi on boot pin - reset if pulled low on boot
//
#ifndef RESETWIFI
#define RESETWIFI D5
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Bubble loop time in milliseconds - Must be declared as an UL
//
#ifndef BUBLOOP
#define BUBLOOP 60000UL // One minute
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Main loop timer - defines how often to print time debug
//
#define LOOPTIMER 5000
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Resolution time in microseconds (debouncer) - Must be declared as an UL
//
#ifndef RESOLUTION
#define RESOLUTION 500UL
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Port for local web services
//
#ifndef PORT
#define PORT 80
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// HTTP endpoint address
//
#ifndef TARGETURL
#define TARGETURL "http://brewpi.local/brew-bubbles.php"
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Target Frequency (default 1 minute)
//
#ifndef TARGETFREQ
#define TARGETFREQ 1 * 60 * 1000UL
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Brewer's Friend Frequency (default 15 mins)
//
#ifndef BFFREQ
#define BFFREQ 15 * 60 * 1000UL
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// NTP Server
//
#ifndef TIMESERVER
#define TIMESERVER "pool.ntp.org"
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// NTP Definitions
//
#ifndef TIMEZONE
#define TIMEZONE 0
#define MINUTESTIMEZONE 0
#define USEDST false
#define NTP_TIMEOUT 1500
#endif
//
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Output pin for LED
//
#ifndef LED
#define LED LED_BUILTIN
#endif
//
//////////////////////////////////////////////////////////////////////////

#endif // CONFIG_H
