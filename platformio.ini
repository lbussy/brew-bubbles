; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[common_env_data]
upload_speed = 460800
monitor_speed = 74880
;monitor_rts = 0
;monitor_dtr = 1
framework = arduino
platform = espressif8266

build_flags = !python tools\git_rev.py
; Remove default exceptions disabled flag
; build_unflags = -fno-exceptions
; build_flags = -D PIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY			 		; v2 Lower Memory (default)
; build_flags = -D PIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH				; v2 Higher Bandwidth
; build_flags = -D PIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY_LOW_FLASH			; v2 Lower Memory (no features)
; build_flags = -D PIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH_LOW_FLASH	; v2 Higher Bandwidth (no features)
; build_flags = -D PIO_FRAMEWORK_ARDUINO_LWIP2_IPV6_LOW_MEMORY 				; v2 IPv6 Lower Memory
; build_flags = -D PIO_FRAMEWORK_ARDUINO_LWIP2_IPV6_HIGHER_BANDWIDTH 		; v2 IPv6 Higher Bandwidth
; build_flags = -D PIO_FRAMEWORK_ARDUINO_LWIP_HIGHER_BANDWIDTH 				; v1.4 Higher Bandwidth
; build_flags = -DDEBUG_ESP_PORT=Serial -DDEBUG_ESP_CORE -DDEBUG_ESP_WIFI
;extra_scripts = pre:python tools\name_firmware.py
lib_deps = 
    ArduinoJson,
    OneWire,
    DallasTemperature,
    ArduinoLog,
    DoubleResetDetect,
    Time,
    NtpClientLib,
    CircularBuffer,
    https://github.com/lbussy/LCBUrl.git
    https://github.com/tzapu/WiFiManager.git#development

[env:d1_mini]
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
;monitor_rts = ${common_env_data.monitor_rts}
;monitor_dtr = ${common_env_data.monitor_dtr}
framework = ${common_env_data.framework}
platform = ${common_env_data.platform}
build_unflags = ${common_env_data.build_unflags}
build_flags = ${common_env_data.build_flags}
extra_scripts = ${common_env_data.extra_scripts}
lib_deps = ${common_env_data.lib_deps}
board = d1_mini
